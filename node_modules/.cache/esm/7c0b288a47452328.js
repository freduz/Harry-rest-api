let CustomErrorHandler,JwtService;_474‍.x([["default",()=>_474‍.o]]);_474‍.w("./../services/CustomeErrorHandler",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);_474‍.w("./../services/JwtService",[["default",["JwtService"],function(v){JwtService=v}]]);

const auth = (req, res, next) => {
  let authHeader = req.headers.autherization;
  _474‍.g.console.log(authHeader);

  if (!authHeader) {
    return next(CustomErrorHandler.unAuthorised());
  }

  const token = authHeader.split(" ")[1];
  try {
    const { _id, role } = JwtService.verify(token);
    const user = {
      _id: _id,
      role: role,
    };

    req.user = user;
    next();
  } catch (err) {
    return next(err);
  }
};

_474‍.d(auth);
